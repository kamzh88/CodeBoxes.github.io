{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/SearchBooks/index.js","components/SearchResults/index.js","components/Wrapper/index.js","utils/API.js","pages/Search/index.js","pages/Saved/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","AppBar","Toolbar","Typography","variant","style","marginRight","to","Component","styles","headerStyle","maxWidth","background","textAlign","padding","marginTop","height","overflow","headerText","color","Heading","Jumbotron","fluid","Container","Card","form","display","flexDirection","inputStyle","SearchBooks","props","marginLeft","FormControl","InputLabel","inputStyles","htmlFor","Input","id","type","label","value","search","onChange","handleInputChange","Button","onClick","handleFormSubmit","overflowY","SearchResults","this","results","map","index","volumeInfo","key","width","margin","Grid","container","justify","size","startIcon","handleBtnClick","title","image","imageLinks","smallThumbnail","subTitle","subtitle","authors","description","link","infoLink","src","href","Wrapper","children","axios","get","process","bookData","post","Search","state","event","setState","target","preventDefault","encodeURIComponent","trim","API","then","res","data","status","Error","message","items","error","catch","err","book","console","log","Saved","books","author","push","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21dd99ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nclass Nav extends Component {\n\n    render() {\n        return (\n            \n                <AppBar>\n                    <Toolbar>\n                        <Typography variant=\"h6\" style={{ marginRight: 16 }}>\n                            Google Books\n                        </Typography>\n                        <Link to=\"/\" style={{ marginRight: 16 }}>Search</Link>\n                        <Link to=\"/save\" style={{ marginRight: 16 }}>Saved</Link>\n                    </Toolbar>\n                </AppBar>\n        )\n    }\n\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nconst styles = {\n    headerStyle: {\n        maxWidth: \"100%\",\n        background: \"lightgrey\",\n        textAlign: \"center\",\n        padding: 0,\n        marginTop: 80,\n        height: 130,\n        overflow: \"auto\"\n    },\n    headerText: {\n        color: \"#fff\",\n    }\n}\n\nclass Heading extends Component {\n    render() {\n        return (\n            \n                <Jumbotron style={styles.headerStyle} fluid>\n                    <Container>\n                        <h1>Google Books Search</h1>\n                        <p>Search for and Save Books of Interest</p>\n                    </Container>\n                </Jumbotron>\n          \n        );\n    };\n};\n\nexport default Heading;","import React from \"react\";\nimport { FormControl, InputLabel, Input, Card, Button } from '@material-ui/core';\n\nconst styles = {\n    Card: {\n        marginTop: 30,\n        height: 170,\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: 10\n    },\n    inputStyle: {\n        padding: 20\n    }\n}\n\nfunction SearchBooks(props) {\n    // console.log(props)\n    return (\n        <Card style={styles.Card}>\n            <h2 style={{ marginLeft: 10 }}>Book Search</h2>\n            <form style={styles.form}>\n                <FormControl>\n                    <InputLabel style={styles.inputStyles} htmlFor=\"my-input\">Book Name</InputLabel>\n                    <Input\n                        style={styles.inputStyles}\n                        id=\"my-input\"\n                        type={\"search\"}\n                        label={\"Search\"}\n                        value={props.search}\n                        onChange={props.handleInputChange}\n                    />\n                </FormControl>\n                <Button\n                    variant={'contained'}\n                    onClick={props.handleFormSubmit}\n                >Submit</Button>\n            </form>\n        </Card>\n    );\n\n};\n\nexport default SearchBooks;","import React, { Component } from \"react\";\nimport { Card, Button, Grid } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = {\n    Card: {\n        marginTop: 30,\n        height: 540,\n        overflowY: 'scroll'\n    }\n}\n\nclass SearchResults extends Component {\n    render() {\n        return (\n            <div style={styles.Card}>\n                <Card variant=\"outlined\">\n                    <h2 style={{ marginLeft: 60 }}>Results</h2>\n                    <ul>\n                        {this.props.results.map(({ volumeInfo }, index) => (\n                            <Card key={index} variant=\"outlined\" style={{ width: \"auto\", margin: 20 }}>\n                                <li style={{ overflow: \"auto\", padding: 10 }}>\n                                    <Grid\n                                        container\n                                        justify=\"flex-end\">\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            size=\"small\"\n                                            startIcon={<SaveIcon />}\n                                            onClick={() => this.props.handleBtnClick({\n                                                title: volumeInfo.title,\n                                                image: volumeInfo.imageLinks ? volumeInfo.imageLinks.smallThumbnail : 'n/a',\n                                                subTitle: volumeInfo.subtitle,\n                                                authors: volumeInfo.authors,\n                                                description: volumeInfo.description,\n                                                link: volumeInfo.infoLink\n                                            })}\n                                        >Save\n                                        </Button>\n                                    </Grid>\n                                    {volumeInfo.imageLinks ? <img src={volumeInfo.imageLinks.smallThumbnail} /> : 'n/a'}<br></br>\n                                    Title: {volumeInfo.title}<br></br>\n                                    Subtitle: {volumeInfo.subtitle}<br></br>\n                                    Authors: {volumeInfo.authors}<br></br>\n                                    Description: {volumeInfo.description}<br></br>\n                                    <a href={volumeInfo.infoLink}>More Info</a><br></br>\n                                </li>\n                            </Card>\n                        ))}\n                    </ul>\n                </Card>\n            </div >\n        );\n    };\n};\n\nexport default SearchResults;","import React from \"react\";\n\nfunction Wrapper(props) {\n    return (\n        <div>{props.children}</div>\n    )\n}\n\nexport default Wrapper;","import axios from \"axios\";\n\nconst APIKEY = process.env.REACT_APP_BOOKS_KEY;\n\nexport default {\n    getBookList: function(search) {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${search}&maxResults=20&key=${APIKEY}`);\n    },\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    },\n    getBooks: function() {\n        return axios.get(\"/api/books\");\n    }\n};","import React, { Component } from \"react\";\nimport Heading from '../../components/Jumbotron';\nimport SearchBooks from \"../../components/SearchBooks\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Wrapper from \"../../components/Wrapper\"\nimport API from \"../../utils/API\";\n\nclass Search extends Component {\n    state = {\n        search: \"\",\n        results: [],\n    }\n\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        const search = encodeURIComponent(this.state.search.trim())\n        API.getBookList(search)\n            .then(res => {\n                if (res.data.status === \"error\") {\n                    throw new Error(res.data.message);\n                }\n                this.setState({ results: res.data.items, error: \"\" });\n            })\n            .catch(err => this.setState({ error: err.message }));\n    }\n\n    handleBtnClick = book => {\n        API.saveBook(book)\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Heading />\n                <SearchBooks\n                    handleFormSubmit={this.handleFormSubmit}\n                    search={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                />\n                <SearchResults\n                    results={this.state.results}\n                    handleBtnClick={this.handleBtnClick}\n                />\n            </Wrapper>\n        );\n    };\n};\n\nexport default Search;","import React, { Component } from \"react\";\nimport { Card, Button, Grid } from '@material-ui/core';\nimport Heading from '../../components/Jumbotron';\nimport API from \"../../utils/API\";\n\nconst styles = {\n    Card: {\n        marginTop: 30,\n        height: 540,\n        overflowY: 'scroll'\n    }\n}\n\nclass Saved extends Component {\n    state = {\n        books: [],\n        title: [],\n        author: [],\n\n    };\n\n    componentDidMount() {\n        API.getBooks()\n            .then(res => {\n                let title = this.state.title;\n                let author = this.state.author;\n                res.data.map(book => {\n                    title.push(book.title)\n                    author.push(book.authors);\n\n                })\n                this.setState({ books: res.data, title: title, author: author })\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Heading />\n                <div style={styles.Card}>\n                    <Card variant=\"outlined\">\n                        {this.state.books.map((book, index) => (\n                            <Card key={index} variant=\"outlined\" style={{ width: \"auto\", margin: 20 }}>\n                                <div style={{ overflow: \"auto\", padding: 10 }}>\n                                    <img src={book.image} />\n                                    <p>Title: {book.title}</p>\n                                    <p>Subtitle: {book.subtitle}</p>\n                                    <p>Authors: {book.authors}</p>\n                                    <p>Description: {book.description}</p>\n                                    <a href={book.link}>More Info</a><br></br>\n                                    <br></br>\n                                </div>\n                            </Card>\n                        ))}\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Saved;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport './App.css';\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Nav />\n      <Wrapper>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/save\" component={Saved} />\n      </Wrapper>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}